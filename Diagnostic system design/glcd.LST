C51 COMPILER V9.60.0.0   GLCD                                                              09/28/2020 20:52:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GLCD
OBJECT MODULE PLACED IN glcd.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE glcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg51.h>
   2          
   3          /**LCD PIN DEFINITION**/
   4          #define glcd P0
   5          #include"delay.h"
   6          // IN-BUILT FOR T.B
   7          
   8          sbit RS=P3^4; 
   9          sbit RW=P3^5;
  10          sbit EN=P3^6;
  11          
  12          sbit RST=P1^2;
  13          sbit CS2=P1^3;
  14          sbit CS1=P1^4;
  15          
  16          
  17          code unsigned char arr[95][6] =
  18          {  
  19             {0x00,0x00,0x00,0x00,0x00,0},    //  space 
  20             {0x00,0x00,0x4F,0x00,0x00,0},        //  '!'
  21             {0x00,0x07,0x00,0x07,0x00,0},        //  '"'
  22             {0x14,0x7F,0x14,0x7F,0x14,0},    //  '#'
  23             {0x24,0x2A,0x7F,0x2A,0x12,0},    //  '$'
  24             {0x23,0x13,0x08,0x64,0x62,0},    //  '%'
  25             {0x00,0x02,0x05,0x02,0x00,0},    //  '&'
  26             {0x00,0x05,0x03,0x00,0x00,0},        //  '''
  27             {0x1C,0x22,0x41,0x00,0x00,0},      //  '('
  28             {0x00,0x00,0x41,0x22,0x1C,0},      //  ')'
  29             {0x14,0x08,0x3E,0x08,0x14,0},      //  '*'
  30             {0x08,0x08,0x3E,0x08,0x08,0},        //  '+'
  31             {0x00,0x50,0x30,0x00,0x00,0},      //  ','
  32             {0x08,0x08,0x08,0x08,0x08,0},        //  '-' 
  33             {0x00,0x60,0x60,0x00,0x00,0},      //  '.'
  34             {0x20,0x10,0x08,0x04,0x02,0},      //  '/'
  35             {0x3E,0x51,0x49,0x45,0x3E,0},      //  '0'
  36             {0x00,0x42,0x7F,0x40,0x00,0},      //  '1'
  37             {0x42,0x61,0x51,0x49,0x46,0},    //  '2'
  38             {0x21,0x41,0x45,0x4B,0x31,0},    //  '3'
  39             {0x18,0x14,0x12,0x7F,0x10,0},    //  '4'
  40             {0x27,0x45,0x45,0x45,0x39,0} ,   //  '5'
  41             {0x3C,0x4A,0x49,0x49,0x30,0},    //  '6'
  42             {0x01,0x71,0x09,0x05,0x03,0},        //  '7'
  43             {0x36,0x49,0x49,0x49,0x36,0},    //  '8'
  44             {0x06,0x49,0x49,0x49,0x36,0},    //  '9' 
  45             {0x00,0x36,0x36,0x00,0x00,0},        //  ':'
  46             {0x00,0x56,0x36,0x00,0x00,0},    //  ';'
  47             {0x08,0x14,0x22,0x41,0x00,0},      //  '<'
  48             {0x14,0x14,0x14,0x14,0x14,0},    //  '='
  49             {0x00,0x41,0x22,0x14,0x08,0},      //  '>'
  50             {0x02,0x01,0x51,0x09,0x06,0},        //  '?'
  51             {0x32,0x49,0x79,0x41,0x3E,0},    //  '@'
  52             {0x7E,0x11,0x11,0x11,0x7E,0},    //  'A'
  53             {0x7F,0x49,0x49,0x49,0x36,0},      //  'B'
  54             {0x3E,0x41,0x41,0x41,0x22,0},    //  'C'
  55             {0x7F,0x41,0x41,0x22,0x1C,0},    //  'D'
C51 COMPILER V9.60.0.0   GLCD                                                              09/28/2020 20:52:22 PAGE 2   

  56             {0x7F,0x49,0x49,0x49,0x41,0},    //  'E'
  57             {0x7F,0x09,0x09,0x09,0x01,0},        //  'F'  
  58             {0x3E,0x41,0x49,0x49,0x7A,0},    //  'G'
  59             {0x7F,0x08,0x08,0x08,0x7F,0},        //  'H'
  60             {0x00,0x41,0x7F,0x41,0x00,0},      //  'I'
  61             {0x20,0x40,0x41,0x3F,0x01,0},      //  'J'
  62             {0x7F,0x08,0x14,0x22,0x41,0},      //  'K'
  63             {0x7F,0x40,0x40,0x40,0x40,0},    //  'L'
  64             {0x7F,0x02,0x0C,0x02,0x7F,0},        //  'M'
  65             {0x7F,0x04,0x08,0x10,0x7F,0},      //  'N'
  66             {0x3E,0x41,0x41,0x41,0x3E,0},      //  'O'
  67             {0x7F,0x09,0x09,0x09,0x06,0},      //  'P'
  68             {0x3E,0x41,0x51,0x21,0x5E,0},    //  'Q'
  69             {0x7F,0x09,0x19,0x29,0x46,0},      //  'R' 
  70             {0x46,0x49,0x49,0x49,0x31,0},      //  'S'
  71             {0x01,0x01,0x7F,0x01,0x01,0},        //  'T'
  72             {0x3F,0x40,0x40,0x40,0x3F,0},      //  'U'
  73             {0x1F,0x20,0x40,0x20,0x1F,0},      //  'V'
  74             {0x3F,0x40,0x38,0x40,0x3F,0},      //  'W'
  75             {0x63,0x14,0x08,0x14,0x63,0},      //  'X'
  76             {0x07,0x08,0x70,0x08,0x07,0},        //  'Y'
  77             {0x61,0x51,0x49,0x45,0x43,0},      //  'Z'  
  78             {0x7F,0x41,0x41,0x00,0x00,0},      //  '['
  79             {0x02,0x04,0x08,0x01,0x02,0},        //  '\'
  80             {0x00,0x00,0x41,0x41,0x7F,0},      //  ']'
  81             {0x04,0x02,0x01,0x02,0x04,0},        //  '^'
  82             {0x40,0x40,0x40,0x40,0x40,0},      //  '_'
  83             {0x00,0x01,0x02,0x04,0x00,0},        //  '`'
  84             {0x20,0x54,0x54,0x54,0x78,0},      //  'a'   
  85             {0x7F,0x48,0x44,0x44,0x38,0},      //  'b'
  86             {0x38,0x44,0x44,0x44,0x20,0},      //  'c'
  87             {0x38,0x44,0x44,0x48,0x7F,0},      //  'd'
  88             {0x38,0x54,0x54,0x54,0x18,0},      //  'e'
  89             {0x08,0x7E,0x09,0x01,0x02,0},        //  'f'
  90             {0x0C,0x52,0x52,0x52,0x3E,0},        //  'g'
  91             {0x7F,0x08,0x04,0x04,0x78,0},        //  'h'
  92             {0x00,0x44,0x7D,0x40,0x00,0},        //  'i'
  93             {0x00,0x20,0x40,0x44,0x3D,0},        //  'j'
  94             {0x7F,0x10,0x28,0x44,0x00,0},        //  'k'
  95             {0x00,0x41,0x7F,0x40,0x00,0},        //  'l'
  96             {0x7C,0x04,0x18,0x04,0x78,0},        //  'm'
  97             {0x7C,0x08,0x04,0x04,0x78,0},        //  'n'
  98             {0x38,0x44,0x44,0x44,0x38,0},      //  'o'
  99             {0x7C,0x14,0x14,0x14,0x08,0},        //  'p'
 100             {0x08,0x14,0x14,0x18,0x7C,0},        //  'q'
 101             {0x7C,0x08,0x04,0x04,0x08,0},        //  'r'
 102             {0x48,0x54,0x54,0x54,0x20,0},      //  's'
 103             {0x04,0x3F,0x44,0x40,0x20,0},        //  't'
 104             {0x3C,0x40,0x40,0x20,0x7C,0},      //  'u'
 105             {0x1C,0x20,0x40,0x20,0x1C,0},      //  'v'
 106             {0x3C,0x40,0x30,0x40,0x3C,0},      //  'w'
 107             {0x44,0x28,0x10,0x28,0x44,0},      //  'x'
 108             {0x0C,0x50,0x50,0x50,0x3C,0},        //  'y'
 109             {0x44,0x64,0x54,0x4C,0x44,0},        //  'z'
 110             {0x08,0x36,0x41,0x00,0x00,0},        //  '{'
 111             {0x00,0x00,0x7F,0x00,0x00,0},        //  '|'
 112             {0x00,0x00,0x41,0x36,0x08,0},        //  '}'
 113             {0x00,0x08,0x04,0x08,0x04,0}         //  '~'
 114          };
 115          
 116          
 117          void delay(unsigned int t)
C51 COMPILER V9.60.0.0   GLCD                                                              09/28/2020 20:52:22 PAGE 3   

 118          {
 119   1        unsigned int x,y;
 120   1        for(x=0;x<1275;x++)
 121   1          for(y=0;y<t;y++); 
 122   1      }
 123          
 124          
 125          void write_cmd(unsigned char cmd)
 126          {
 127   1        RS = 0; 
 128   1          CS1 = 1;
 129   1          CS2 = 1;                             
 130   1          glcd =  cmd;
 131   1          EN = 1;                
 132   1          EN = 0;   
 133   1          delay(2);        
 134   1      }
 135          
 136          
 137          void write_dat(unsigned char dat)
 138          {
 139   1        RS = 1; 
 140   1          glcd = dat;
 141   1          EN = 1;
 142   1        EN = 0;
 143   1      delay(2);        
 144   1      
 145   1      }
 146          
 147          
 148          void glcd_char(unsigned char page, unsigned char hposi, unsigned char ch)
 149          {
 150   1        unsigned char i,j;
 151   1        write_cmd(hposi);
 152   1        write_cmd(page);
 153   1        CS1=1;
 154   1        CS2=0;
 155   1        j=ch-32;
 156   1        for(i=0;i<6;i++)
 157   1        {
 158   2          write_dat(arr[j][i]);
 159   2        }
 160   1      }
 161          
 162          void glcd_str(unsigned char page, unsigned char hposi, unsigned char *ch)
 163          {
 164   1        unsigned char i,j,k;
 165   1        while(*ch!='\0')
 166   1        {
 167   2          write_cmd(hposi);
 168   2          write_cmd(page);
 169   2          CS1=1;
 170   2          CS2=0;
 171   2          for(k=0;k<10;k++)
 172   2          {
 173   3            if(*ch=='\0')
 174   3              break;
 175   3            j=*ch-32;
 176   3            ch++;
 177   3            for(i=0;i<6;i++)
 178   3            {
 179   4              write_dat(arr[j][i]);
C51 COMPILER V9.60.0.0   GLCD                                                              09/28/2020 20:52:22 PAGE 4   

 180   4            }
 181   3          }
 182   2        }
 183   1      }
 184          
 185          
 186          
 187          
 188          void glcd_init(void)
 189          {   
 190   1          /*******RESET***********/
 191   1        RST = 0;
 192   1          delay(10);
 193   1          RST = 1;
 194   1          delay(1);
 195   1        /**********************/
 196   1          EN = 0;
 197   1          CS1 = 0;
 198   1          CS2 = 0;
 199   1          RW = 0;
 200   1          RS = 0;
 201   1          write_cmd(0x3e);        // 0x3E turn it Off.
 202   1          write_cmd(0x3f);       // 0x3F Display ON.
 203   1          write_cmd(0x40);         // display data in horizontal way(0-63) 
 204   1          write_cmd(0xb8);        // display data in vertical way(0-7)
 205   1          write_cmd(0xc0);     // indicates the display data RAM displayed on the top of the screen             
             - 
 206   1      }
 207          
 208          
 209          void glcd_clr(unsigned char val)
 210          {
 211   1           int i,y;
 212   1           CS1 = 1;
 213   1           CS2 = 1; 
 214   1           for(i=0xb8;i<0xc0;i++)
 215   1           {
 216   2                  write_cmd(i);                        // Select Pages.  
 217   2                write_cmd(0x40);                      
 218   2                  for (y=0;y<64;y++)
 219   2                  write_dat(val);                  // Clear data in the LCD.
 220   2         }
 221   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =    570    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
